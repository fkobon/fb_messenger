"""
Facebook Messenger API helps you connect your Flask application to Facebook
Messenger in one line of code.
"""

from flask import request, Response, Flask  # type: ignore
from .event import Event
from .callback_manager import CallbackManager, default_callbacks


class FbMessenger:
    """FB Messenger to Flask app connector."""

    def __init__(self, app: Flask, uri: str, verify_token: str,
                 page_access_token: str) -> None:
        """
        This class connects your Flask app to Facebook Messenger and
        automaticaly registers the routes to handle facebook's events

        Args:
            app: A Flask object instance.
            uri (str): the route where the events will be sent to.
            verify_token (str): the verification token used to register the
            webhook on the developers.facebook.com.
            page_access_token (str): the token generated by facebook for your
            facebook app and page.
        """
        self.verify_token = verify_token
        self.page_access_token = page_access_token
        app.add_url_rule(uri, 'fb_register_app', self.__register_app_endpoint,
                         methods=['GET'])
        app.add_url_rule(uri, 'fb_callback', self.__handle_message_endpoint,
                         methods=['POST'])
        self.callback_manager = CallbackManager(default_callbacks=default_callbacks)

    def __register_app_endpoint(self) -> Response:
        """
        This function handles facebook's challenge to register your
        application's webhook
        """
        verify_token = request.args.get('hub.verify_token')
        if verify_token == self.verify_token:
            return Response(response=request.args.get('hub.challenge'),
                            status=200)
        else:
            return Response(response='Error, wrong validation token {token}'
                            .format(token=verify_token), status=401)

    def __handle_message_endpoint(self) -> Response:
        """
        This function handles the events received from facebook and triggers
        the corresponding callback function
        """
        try:
            data = request.get_json()
            for entry in data['entry']:
                page_id = entry['id']
                # time = entry['time']/1000
                for message in entry['messaging']:
                    event = Event.from_json(message, page_id,
                                            self.page_access_token)
                    callback = self.callback_manager.get_callback(event.event_type)
                    callback(event)
        except Exception as err:
            print(err)
        return Response(response=None, status=200)
